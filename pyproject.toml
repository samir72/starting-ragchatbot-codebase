[project]
name = "starting-codebase"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "chromadb==1.0.15",
    "anthropic==0.58.2",
    "sentence-transformers==5.0.0",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "python-multipart==0.0.20",
    "python-dotenv==1.1.1",
]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
    "httpx>=0.27.0",
    "black>=25.1.0",
    "flake8>=7.1.1",
    "mypy>=1.15.0",
    "isort>=5.14.0",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | chroma_db
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",                          # Verbose output
    "--strict-markers",            # Raise error on unknown markers
    "--tb=short",                  # Shorter traceback format
    "--disable-warnings",          # Disable warnings in output
    "-ra",                         # Show summary of all test outcomes
]
markers = [
    "unit: Unit tests that don't require external services",
    "integration: Integration tests that require API keys or external services",
    "api: API endpoint tests",
]
asyncio_mode = "auto"              # Automatically detect async tests
asyncio_default_fixture_loop_scope = "function"
